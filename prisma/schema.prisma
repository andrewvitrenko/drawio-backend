generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Figure {
  id              Int                @id @default(autoincrement())
  width           Float
  height          Float
  x1              Float
  y1              Float
  x2              Float
  y2              Float
  rotate          Float?
  shape           FigureShape
  sceneId         Int
  scene           Scene              @relation(fields: [sceneId], references: [id], onDelete: Cascade)
  connectionsTo   FigureConnection[] @relation("DistConnection")
  connectionsFrom FigureConnection[] @relation("SrcConnection")
}

model FigureConnection {
  id     Int @id @default(autoincrement())
  srcId  Int
  distId Int

  src  Figure @relation("SrcConnection", fields: [srcId], references: [id], onDelete: Cascade)
  dist Figure @relation("DistConnection", fields: [distId], references: [id], onDelete: Cascade)

  @@unique([srcId, distId])
}

model Scene {
  id      Int      @id @default(autoincrement())
  figures Figure[]
  userId  Int
  user    User @relation(fields: [userId], references: [id], onDelete: Cascade)
  name    String
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name          String?
  Scene         Scene[]
  password      String
  refreshTokens String[]
}

enum FigureShape {
  CIRCLE
  RECTANGLE
  TRIANGLE
  LINE
}
